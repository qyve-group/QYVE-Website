'use client';\n\nimport { useState } from 'react';\n\nimport { supabase } from '@/libs/supabaseClient';\n\ninterface BlogFormData {\n  title: string;\n  slug: string;\n  excerpt: string;\n  content: string;\n  author: string;\n  featured_image: string;\n  published: boolean;\n}\n\nconst generateSlug = (title: string): string => {\n  return title\n    .toLowerCase()\n    .replace(/[^a-z0-9 -]/g, '')\n    .replace(/\\s+/g, '-')\n    .replace(/-+/g, '-')\n    .trim();\n};\n\nconst AdminBlogPage = () => {\n  const [formData, setFormData] = useState<BlogFormData>({\n    title: '',\n    slug: '',\n    excerpt: '',\n    content: '',\n    author: 'QYVE Team',\n    featured_image: '',\n    published: false\n  });\n  \n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n\n  const handleTitleChange = (title: string) => {\n    const slug = generateSlug(title);\n    setFormData(prev => ({ ...prev, title, slug }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setMessage({ type: '', text: '' });\n\n    try {\n      const { error } = await supabase\n        .from('blog_posts')\n        .insert([formData]);\n\n      if (error) throw error;\n\n      setMessage({ type: 'success', text: 'Blog post created successfully!' });\n      setFormData({\n        title: '',\n        slug: '',\n        excerpt: '',\n        content: '',\n        author: 'QYVE Team',\n        featured_image: '',\n        published: false\n      });\n    } catch (error) {\n      setMessage({ type: 'error', text: `Error: ${(error as Error).message}` });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"container max-w-4xl pb-20 pt-10\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">Blog Admin</h1>\n        <p className=\"mt-2 text-gray-600\">Create and manage blog posts for your QYVE store.</p>\n      </div>\n\n      {message.text && (\n        <div className={`mb-6 rounded-lg p-4 ${\n          message.type === 'success' \n            ? 'bg-green-50 border border-green-200 text-green-800' \n            : 'bg-red-50 border border-red-200 text-red-800'\n        }`}>\n          {message.text}\n        </div>\n      )}\n\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        <div className=\"grid gap-6 md:grid-cols-2\">\n          <div>\n            <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Title *\n            </label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={formData.title}\n              onChange={(e) => handleTitleChange(e.target.value)}\n              required\n              className=\"w-full rounded-lg border border-gray-300 px-3 py-2 focus:border-primary focus:outline-none focus:ring-1 focus:ring-primary\"\n              placeholder=\"Enter blog post title\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"slug\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Slug *\n            </label>\n            <input\n              type=\"text\"\n              id=\"slug\"\n              value={formData.slug}\n              onChange={(e) => setFormData(prev => ({ ...prev, slug: e.target.value }))}\n              required\n              className=\"w-full rounded-lg border border-gray-300 px-3 py-2 focus:border-primary focus:outline-none focus:ring-1 focus:ring-primary\"\n              placeholder=\"url-friendly-title\"\n            />\n          </div>\n        </div>\n\n        <div>\n          <label htmlFor=\"excerpt\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Excerpt *\n          </label>\n          <textarea\n            id=\"excerpt\"\n            value={formData.excerpt}\n            onChange={(e) => setFormData(prev => ({ ...prev, excerpt: e.target.value }))}\n            required\n            rows={3}\n            className=\"w-full rounded-lg border border-gray-300 px-3 py-2 focus:border-primary focus:outline-none focus:ring-1 focus:ring-primary\"\n            placeholder=\"Brief description of the blog post...\"\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Content *\n          </label>\n          <textarea\n            id=\"content\"\n            value={formData.content}\n            onChange={(e) => setFormData(prev => ({ ...prev, content: e.target.value }))}\n            required\n            rows={15}\n            className=\"w-full rounded-lg border border-gray-300 px-3 py-2 focus:border-primary focus:outline-none focus:ring-1 focus:ring-primary\"\n            placeholder=\"Write your blog post content here...\\n\\nUse markdown formatting:\\n# Main heading\\n## Subheading\\n\\nRegular text with line breaks.\"\n          />\n        </div>\n\n        <div className=\"grid gap-6 md:grid-cols-2\">\n          <div>\n            <label htmlFor=\"author\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Author\n            </label>\n            <input\n              type=\"text\"\n              id=\"author\"\n              value={formData.author}\n              onChange={(e) => setFormData(prev => ({ ...prev, author: e.target.value }))}\n              className=\"w-full rounded-lg border border-gray-300 px-3 py-2 focus:border-primary focus:outline-none focus:ring-1 focus:ring-primary\"\n              placeholder=\"Author name\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"featured_image\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Featured Image URL\n            </label>\n            <input\n              type=\"url\"\n              id=\"featured_image\"\n              value={formData.featured_image}\n              onChange={(e) => setFormData(prev => ({ ...prev, featured_image: e.target.value }))}\n              className=\"w-full rounded-lg border border-gray-300 px-3 py-2 focus:border-primary focus:outline-none focus:ring-1 focus:ring-primary\"\n              placeholder=\"https://example.com/image.jpg\"\n            />\n          </div>\n        </div>\n\n        <div className=\"flex items-center\">\n          <input\n            type=\"checkbox\"\n            id=\"published\"\n            checked={formData.published}\n            onChange={(e) => setFormData(prev => ({ ...prev, published: e.target.checked }))}\n            className=\"h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded\"\n          />\n          <label htmlFor=\"published\" className=\"ml-2 block text-sm text-gray-900\">\n            Publish immediately\n          </label>\n        </div>\n\n        <div className=\"flex gap-4\">\n          <button\n            type=\"submit\"\n            disabled={isSubmitting}\n            className=\"rounded-lg bg-primary px-6 py-3 text-white font-medium transition-colors hover:bg-primary-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {isSubmitting ? 'Creating...' : 'Create Blog Post'}\n          </button>\n          \n          <button\n            type=\"button\"\n            onClick={() => setFormData({\n              title: '',\n              slug: '',\n              excerpt: '',\n              content: '',\n              author: 'QYVE Team',\n              featured_image: '',\n              published: false\n            })}\n            className=\"rounded-lg border border-gray-300 px-6 py-3 text-gray-700 font-medium transition-colors hover:bg-gray-50\"\n          >\n            Clear Form\n          </button>\n        </div>\n      </form>\n\n      <div className=\"mt-12 rounded-lg bg-gray-50 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">Quick Tips:</h3>\n        <ul className=\"space-y-2 text-sm text-gray-600\">\n          <li>• Use <strong>markdown formatting</strong> in content: # for headings, ## for subheadings</li>\n          <li>• The <strong>slug</strong> will be auto-generated from the title, but you can customize it</li>\n          <li>• Add your <strong>Supabase image URLs</strong> for featured images</li>\n          <li>• Save as <strong>draft</strong> (unpublished) to review before going live</li>\n          <li>• Blog posts appear on <strong>/blog</strong> when published</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminBlogPage;\n